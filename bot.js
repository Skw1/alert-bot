import { Client, GatewayIntentBits } from 'discord.js';
import axios from 'axios';
import dotenv from 'dotenv';

dotenv.config();

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Discord
const client = new Client({
  intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages],
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –≤–æ–∑–¥—É—à–Ω—ã—Ö —Ç—Ä–µ–≤–æ–≥–∞—Ö
async function fetchAirRaidAlerts() {
  try {
    const response = await axios.get('https://api.alerts.in.ua/v1/alerts/active.json', {
      headers: {
        Authorization: `Bearer ${process.env.ALERTS_API_TOKEN}`,
      },
    });
    return response.data.alerts;
  } catch (error) {
    console.error('Failed to fetch alerts:', error.message);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª
async function sendAlertIfActive() {
  const alerts = await fetchAirRaidAlerts();
  if (alerts) {
    const activeAlerts = alerts.filter((alert) => alert.status === 'active');
    const inactiveAlerts = alerts.filter((alert) => alert.status === 'inactive');

    client.guilds.cache.forEach(async (guild) => {
      const alertChannel = guild.channels.cache.find(
        (channel) => channel.name === process.env.ALERT_CHANNEL_NAME
      );

      if (alertChannel) {
        activeAlerts.forEach((alert) => {
          alertChannel.send(`üö® Air Raid Alert in ${alert.region}! Please take shelter. üö®`);
        });

        inactiveAlerts.forEach((alert) => {
          alertChannel.send(`‚úÖ Air Raid Alert for ${alert.region} has ended. Stay safe.`);
        });
      } else {
        console.log(`Channel "${process.env.ALERT_CHANNEL_NAME}" not found in guild ${guild.name}`);
      }
    });
  }
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
client.once('ready', () => {
  console.log('Air Raid Alert bot is online.');
  setInterval(sendAlertIfActive, 60000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥
});

client.login(process.env.DISCORD_BOT_TOKEN);
